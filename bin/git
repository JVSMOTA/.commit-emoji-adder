#!/usr/bin/env bash

# Script to add emojis to commit message
if [ "$1" = "commit" ] && [ "$2" = "-m" ]; then
    commit_message="$3"

    # Checks the commit type and adds the corresponding emoji
    if [[ "${commit_message#feat}" != "$commit_message" ]]; then
        emoji="✨"
    elif [[ "${commit_message#fix}" != "$commit_message" ]]; then
        emoji="🐛"
    elif [[ "${commit_message#chore}" != "$commit_message" ]]; then
        emoji="🔧"
    elif [[ "${commit_message#docs}" != "$commit_message" ]]; then
        emoji="📝"
    elif [[ "${commit_message#style}" != "$commit_message" ]]; then
        emoji="💄"
    elif [[ "${commit_message#refactor}" != "$commit_message" ]]; then
        emoji="♻️"
    elif [[ "${commit_message#test}" != "$commit_message" ]]; then
        emoji="✅"
    elif [[ "${commit_message#perf}" != "$commit_message" ]]; then
        emoji="🚀"
    elif [[ "${commit_message#ci}" != "$commit_message" ]]; then
        emoji="👷"
    elif [[ "${commit_message#build}" != "$commit_message" ]]; then
        emoji="🏗️"
    elif [[ "${commit_message#revert}" != "$commit_message" ]]; then
        emoji="⏪"
    elif [[ "${commit_message#init}" != "$commit_message" ]]; then
        emoji="🎉"
    else
        emoji=""
    fi

    # Add emoji to commit message
    command git commit -m "$emoji $commit_message"
else
    # Use the original git command for other cases
    command git "$@"
fi
